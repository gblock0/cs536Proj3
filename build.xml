<!-- This buildfile is for cs536 (fall 2013) project #3

      It supports the following targets:
      
      (1) compile (this is the default):
           recompile all java classes that need recompilation
           (because the source is newer that the .class file)
           
      (2) test
          Recompile as necessary and run two simple test programs.
          File expected output.txt shows the expected output.
          
      (3) test1
          Recompile as necessary. With a GUI, prompt user to select a test file
          and then run a test using that file.
          
      (4) clean
          "Clean up" by removing all .class files. Used in preparation
          for a full recompilation.
 -->

	<project default="compile">

 <target name ="compile" depends="JLex,Cup,AST">
   <mkdir dir="bin">
   </mkdir>
   <javac  includeantruntime="false" srcdir="src" destdir="bin"
            classpath="." excludes="*.jlex.java,ast.java" debug="on">
   </javac>
 </target>

		<target name ="clean">
		   <delete dir="bin">
		   </delete>
		   <delete>
		    <fileset dir="." includes="src/*.jlex.java"/>
		    <fileset dir="." includes="src/parser.java"/>
		   </delete>
		 </target>

 <target name ="test" depends="compile">
 	<echo message="------- test using test.lite ----------">
 	     </echo>
   <java classpath="bin;." classname="P3" fork="true" >
    <arg value="test.lite">
    </arg>
   </java>
 	<echo message="------- test using biggertest.lite ----------">
 	 	     </echo>
 	   <java classpath="bin;." classname="P3" fork="true" >
 	    <arg value="biggertest.lite">
 	    </arg>
 	   </java>
 </target>
		
 <target name ="test1" depends="compile">
		 	
	 <java classpath="bin;." classname="P3" fork="true" > 
	 </java>
		 	
</target>
		
		<target name ="checkJLexNeeded" >
		   <uptodate property="JLexnotNeeded" targetfile="src/lite.jlex.java" 
		      srcfile="lite.jlex" >
		   </uptodate>
		 </target>
 

		 <target name ="JLex" depends="checkJLexNeeded" unless="JLexnotNeeded">
		   <mkdir dir="bin">
		   </mkdir>
		   <java  classpath="." classname="JLex.Main" fork="true" > 
		    <arg value="./lite.jlex">
		    </arg>
		   </java>
		    <move file="lite.jlex.java" todir="src">
		    </move>
		    <javac  includeantruntime="false" srcdir="src" destdir="bin"
		            classpath="."  includes="lite.jlex.java" debug="on">
		     </javac>
		 </target>

		 <target name ="checkCupNeeded" >
		   <uptodate property="CupnotNeeded" targetfile="src/parser.java" 
		      srcfile="lite.cup" >
		   </uptodate>
		 </target>

		 <target name ="Cup" depends="checkCupNeeded" unless="CupnotNeeded">
		   <mkdir dir="bin">
		   </mkdir>
		   <java  classpath="src;bin;." classname="java_cup.Main" fork="true" input="lite.cup" > 
		   </java>
		    <move file="parser.java" todir="src">
		    </move>
		    <move file="sym.java" todir="src">
		    </move>
		     <javac  includeantruntime="false" srcdir="src" destdir="bin"
		            classpath="."  includes="sym.java" debug="on">
		     </javac>
		   
		 </target>



 <target name ="checkASTNeeded" >
   <uptodate property="ASTnotNeeded" targetfile="bin/nullTypeNode.class" 
      srcfile= "src/ast.java" >
   </uptodate>
 </target>

 <target name ="AST" depends="checkASTNeeded" unless="ASTnotNeeded">
   <mkdir dir="bin">
   </mkdir>
    <javac  includeantruntime="false" srcdir="src" destdir="bin"
            classpath="."  includes="ast.java" debug="on">
     </javac>
 </target>



</project>
